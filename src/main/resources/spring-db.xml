<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
    <!-- 使用JNDI数据源 -->
    <!--   <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" lazy-init="default" autowire="default"> <property name="jndiName">
          <value>java:comp/env/jndi/egvm</value> </property> <property name="resourceRef"> <value>false</value> </property> </bean> -->

    <!-- c3p0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- <property name="driverClass" value="${c3p0.driverClass}"></property> <property name="jdbcUrl" value="${c3p0.url}"></property> <property
            name="user" value="${c3p0.user}"></property> <property name="password" value="${c3p0.password}"></property> <property name="acquireIncrement"
            value="${c3p0.acquireIncrement}"></property> <property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property> <property name="maxIdleTime"
            value="${c3p0.maxIdleTime}"></property> <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property> <property name="minPoolSize" value="${c3p0.minPoolSize}"></property>
            <property name="acquireRetryDelay" value="1000"></property> <property name="acquireRetryAttempts" value="60"></property> <property name="breakAfterAcquireFailure"
            value="false"></property> -->
    </bean>

    <!-- 配置SqlSessionFactory -->
    <!-- 该工厂类由Spring提供，里面封装了 创建session、关闭session、开启事务、 提交事务的方法。使用Spring整合MyBatis 之后，我们可以不必自己做这些事，Spring 会自动的做这些处理。这里也是整合思想 的体现。 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 创建容器时，Spring会根据此项配置 自动加载MyBatis的映射文件。 -->
        <property name="mapperLocations" value="classpath*:com/rain/**/*Mapper.xml"/>
        <!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 -->
        <property name="typeAliasesPackage" value="com.rain.boss.perm.entity,com.rain.boss.base.entity"/>
    </bean>

    <!-- 配置MyBatis注解 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 创建容器后，MapperScannerConfigurer会 自动扫描当前指定路径下的接口/类 -->
        <property name="basePackage" value="com.rain"/>
        <!-- MapperScannerConfigurer自动扫描带有如下注解的接口/类 -->
        <property name="annotationClass" value="com.rain.boss.annotation.MyBatisMapper"/>
    </bean>

</beans>